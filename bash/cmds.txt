# nice
nice -n 10  // decrease priority
nice -n -10  // increase priority
nice -n [-20;20]

# cut
cut file
-d  \t // delimiter
-f a-b  // range -f a-

# ftp
ftp ftp://ftpusr43:0afwmRLv@ftp2.babraham.ac.uk
ftp ftp://user:pass@host
ftp host  // starts prompt for user and pass (on EBI)
ls
put local_file  // upload local file
mput *.txt  // upload multiple files
get remote_file // download remove file
delete remote_file
quit

# wget
-P destination_directory
-O destination_file
-r --no-parent // download directory recursively

# tree
* -L  maxlevels
* -d  // only directories
* -a  // all files
* --prune // do not show empty dirs
* -P pattern  // only files matching pattern
* -s, -h  // size (human readable)
* -p  // ls -l

# find
-name file.h  // only match filename
-name "?il*.[ho]" // ?, *, [] are special characters
-name '*pdf' -o -name '*html' // combine regex
-path pattern // match complete path
-path "*/src" // all src directories
-regex "*/.EADME" // emacs regex whole path
-type df  // directory of file
-not -path '*/\.*'  // exclude hidden directories
-exec
-delete
-ls

# misc
* uptime  // displays uptime and CPU load
* tr SET SET  // translate characters
  * tr -d SET // delete characters
  * tr -s SET // sequence set of consecutive characters
* readlink -f FILE  // get absolute path
* ldd [binary]  // prints shared libraries [binary] depends on
* uniq -c // count # unique words
* ctrl - \ // interrupt command

# gzip
gzip -c infile > outfile  // different src/dst

# zip
zip outfile.zip -r dir -x '*.sh' // -x, --exclude: exclude files
-j // ignore directory structure

# unzip
-d out_dir // extract to specific directory, not cwd
-o // overwrite existing files without asking
-f // overwrite only older files
-j // ignore directory structure in zip file

# convert
 convert IN OUT
 -density 300 // 300 dpi
 -resize 50%
 - size 400x100
convert -delay 50 *.png animation.gif
convert *.png -append all.png // concatenate


# od (octal dump)
* od -t c // translate to character
* od -t d1  // translate one byte to signed integer
* od -t u1  // translate one byte to unsigned integer
* od -t x1  // translate one byte to hex
* od -t dI  // translate four bytes to integer
* od -t c -t u1 // translate to character and unsigned integer

# hd (hexdump) -> better use od
* hd -c // character
* hd -b // byte

# xargs
ls | xargs -Ix cmd x // cmd will be executed n times with different x
-P N // run with N processes in parallel
-L 100 // x replaced by 100 args per command

# date
date '+%y%m%d_%H%M%S'
%F // date: 2018-01-29
%T // time: 20:15:00

# Changing time zone
timedatectl set-timezone 'America/Los_Angeles'

# less
* Flags (-S, -I, ...) can be typed while less is open
-S no line wrap
-I // case insensitive search
+G // jumps to end after opening
:n // next file
:p // previous file

# zcommands
* to inspect compressed (gzip, zip) files
* https://www.cyberciti.biz/tips/decompress-and-expand-text-files.html
zless, zmore, zcat
zgrep
zdiff file1 file2
zipgrep pattern archive.zip // search pattern in all files in archive.zip


# echo
echo -e 'a\tb' // tabs

# ln
-r abs_path target // make absolute path relative to target location
-f // overwrite if existing

# pandoc
pandoc --from markdown --to rst --output file.rst file.md
pandoc -f markdown -to rst -o file.rst file.md

# head
head -n 3 // print 3 lines
head -n -3 // print all until -3 (last three lines)
head -n -1 // remove last line

# tail
tail -n 3 // last 3 lines
tail -n +2 // print all lines starting at line 2
tail -n -2 // print all lines starting at line -2 (from back)
tail -n +2 // remove first line

# identify
* To show information about image
identify -verbose myimage.jpg

# shuf // shuffling lines in file
cat file.txt | shuf

# job control
ps a // show most processes
ps ax // show all processes
pstree
pgrep // grep job id by name
  -l // also show name
  -a // also show full command
pkill // pgrep NAME | kill
pkill -9 -n // kill only newest process


# nslookup
set q=mx // type in console; check mx record


# htop
~/.configs/htop/htoprc
-u $USER // select default user
-d 10 // delay updated in ten's of a second (10 for 1 sec)

## Shortcuts
space // tag (select) process
U // untag all processes
k // kill tagged processes -> use 9 to jump to 9
l // trace library calls
\ // filter by name
/ // search by name
<, > // select sort column
I // invert sort order
S // display settings

## Columns
M_SIZE (VIRT): total memory
M_RESIDENT (RES): memory stack + data/text section
M_SHARED (SHR): memory shared pages
STATE (S): R=Running / S=Sleeping
IO: IORR + IOWR
IORR: IO read rate in bytes/s
IOWR: IO write rate in bytes/s



# read / readline / interactive / ask confirmatio
read [var]
  * Reads input into variable $var
  * If var not specified, reads into $REPLY
  -n 1 // read only 1 charcter
  -p "Message" // display prompt
  -s // do not echo characters
  -e // use readline
  -t SEC // timeout in seconds

read -e p 'Your name: '
echo "Hello $REPLY"
read -e -n 1 -p 'Yes [y] or no [n]?'
echo $REPLY


# crontab
crontab -e // edit schedule
MAILTO='cangermueller@gmail.com' // at top of crontab; send mail


# Reverse engineering
xxd // Hex editor
hexdump // binary to hex
strings // print strings in file
file // tries to get file format
diff, grep


# Measure execution time
time ./myscript.sh


# tee
-a // append
cmd 2>&1 | tee log // redirect stderr


# sort
sort -t ',' -k 1 // sort by field

## Ignore first list
head -n 1 ./ukb21036.csv > ./ukb21036.csv.sorted
tail -n +2 ./ukb21036.csv | sort -t , -k 1 >> ./ukb21036.csv.sort


# temp file / dir
mktemp "/tmp/XXXXXX" // temp file
mktemp -d "/tmp/XXXXXX" // temp dir

# reboot
reboot

# ag / ack grep
ag [options] PATTERN
-i // insensitive
-S // smart case; *on* by default
-c // count number of matches per fiel
--hidden // also search hidden files

# rg / ripgrep
rg [options] PATTERN
-i // insensitive
-S // smart case; *off* by default
-c // count number of matches per file
-t py // only search python files
--hidden // also search hidden files
-u // search all ignored files
-uu // search all ignored and hidden files
-uuu // search everything
-g 'file_glob*py' // filter files by glob
-F search literal / no regex
-l // show files only
