est command
============
if command; then  // if command succeeds; $? == 0
if ! command; then  // if command fails; $? != 0

test -e file == [ -e file ] // $? == 0 if file exists
  ${foo?} // fail if foo is undefined / empty string
  ${foo?"err_msg"} // fail with err_msg if foo is undefined
  -z // size zero, e.g. undefined or ""
  -n // opposite of -z; size is not zero / defined
  -e  // file exists
  -f  // file exists
  -L // symbolic link exists
  -d  // directory exists
  -r  // readable
  -w  // writeable
  -x  // executable
  !expr  // not
  expr -a expr  // and
  expr -o expr  // or

Integer comparison
------------------
-eq // equal
-ne // not equal

String comparision
------------------
-z $s // check if string is undefined or ""; size/length zero
$s == "" // equivalent of `-z $s`
-n $s // opposite of `-z $s`; check if string is not (undefined or "")

s1 == s2 // strings equal
s1 != s2 // strings unequal
s1 == 'a'* // check if s1 starts with a
s1 == *'s2'* // check if s1 contains s2 -> only with [[ ... ]]
$s =~ regex // regex matched anyware
  if [[ $name =~ (board|worker|ps|exporter|eval) ]]; then
  if [[ $name =~ ^[0-9]+$ ]]; then  // is number
    * Use without quotes!!!!
  ^regex  // at beginning
  regex$  // at end
  [0-9A-Za-z] // range
  [^a-z]  // not
  . // single character
  ? // single character
  * // multiple characters

Integer comparision
-------------------
$num1 -ge $num2 // >=
$num1 -gt $num2 // >
$num1 -le $num2 // <=
$num1 -lt $num2 // <

Floating point comparison
-------------------
$num1 -ge $num2 // >=
echo $num1 '>' $num2 | bc -l // returns 1 or 0
if [ $(echo $num1 '>' $num2 | bc -l) -eq 1 ]

Extended test
=============
[[ ... ]]
a == 'test' // works, even if a=
expr && expr  // and; a -
expr || expr // or
!expr // not


Check if list contains value
============================
values=(
  "value1"
  "value2"
  "value3"
  "value4"
)
value="value2"
if [[ ${values[*]} =~ (^|[[:space:]])$value($|[[:space:]]) ]] then
  echo 'yes'
else
  echo 'no'
fi
